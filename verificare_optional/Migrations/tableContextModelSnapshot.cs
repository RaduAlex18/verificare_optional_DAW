// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using verificare_optional.Data;

#nullable disable

namespace verificare_optional.Migrations
{
    [DbContext(typeof(tableContext))]
    partial class tableContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("verificare_optional.Models.Autori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EdituraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Varsta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EdituraId");

                    b.ToTable("Autoris");
                });

            modelBuilder.Entity("verificare_optional.Models.Carti", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Nr_pagini")
                        .HasColumnType("int");

                    b.Property<string>("NumeCarte")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cartis");
                });

            modelBuilder.Entity("verificare_optional.Models.Editura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumeEditura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nr_angajati")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Edituras");
                });

            modelBuilder.Entity("verificare_optional.Models.ModelsRelationAUCT", b =>
                {
                    b.Property<Guid>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AutorId", "CarteId");

                    b.HasIndex("CarteId");

                    b.ToTable("ModelsRelationsAUCT");
                });

            modelBuilder.Entity("verificare_optional.Models.Autori", b =>
                {
                    b.HasOne("verificare_optional.Models.Editura", "Editura")
                        .WithMany("Autorii")
                        .HasForeignKey("EdituraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editura");
                });

            modelBuilder.Entity("verificare_optional.Models.ModelsRelationAUCT", b =>
                {
                    b.HasOne("verificare_optional.Models.Autori", "Autori")
                        .WithMany("ModelsRelationsAUCT")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("verificare_optional.Models.Carti", "Carti")
                        .WithMany("ModelsRelationsAUCT")
                        .HasForeignKey("CarteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autori");

                    b.Navigation("Carti");
                });

            modelBuilder.Entity("verificare_optional.Models.Autori", b =>
                {
                    b.Navigation("ModelsRelationsAUCT");
                });

            modelBuilder.Entity("verificare_optional.Models.Carti", b =>
                {
                    b.Navigation("ModelsRelationsAUCT");
                });

            modelBuilder.Entity("verificare_optional.Models.Editura", b =>
                {
                    b.Navigation("Autorii");
                });
#pragma warning restore 612, 618
        }
    }
}
